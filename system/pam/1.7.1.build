####
## pam build
## Copyright 2023-2025 spkg developers, licensed under GPLv2
HOMEPAGE="https://github.com/linux-pam/linux-pam"
DESCRIPTION="Linux-PAM (Pluggable Authentication Modules)"
LICENSE="BSD GPLv2"
SRC_URI="https://github.com/linux-pam/linux-pam/releases/download/v${PKG_VER}/Linux-PAM-${PKG_VER}.tar.xz"
BDEPS="network/libtirpc"
RDEPS=""
ARCHS="x86 x86_64"
SLOT=0
B=Linux-PAM-${PKG_VER}
setBuildENV meson ninja

src_prepare() {
	checkKernelConfig AUDIT 1 'Auditing Support' 1
}

src_configure() {
	sed -e "s/'elinks'/'lynx'/"                       \
		-e "s/'-no-numbering', '-no-references'/      \
			'-force-html', '-nonumbers', '-stdin'/" \
		-i ../meson.build

	configure_default -Ddocdir=/usr/share/doc/Linux-PAM-$PKG_VER
}

src_test() {
	if [[ ! -e /etc/pam.d/other ]]; then
		if [ "$(id -u)" -eq 0 ]; then
			install -v -m755 -d /etc/pam.d

			cat > /etc/pam.d/other << "EOF"
auth     required       pam_deny.so
account  required       pam_deny.so
password required       pam_deny.so
session  required       pam_deny.so
EOF

			test_default
		else
			echo "$MSG_ERR a pam config was not found and is required to test."
			echo "$MSG_ERR This more than likely means this is a fresh install."
			echo "$MSG_ERR we cannot create one for you as this requires root access."
		fi
	else
		test_default
	fi
}

src_install() {
	install_default

	chmod -v 4755 ${D}/usr/sbin/unix_chkpwd

	rm -rf "$D"/usr/lib/systemd

	install -vdm755 ${D}/etc/pam.d

	cat > /etc/pam.d/other << "EOF"
auth     required       pam_deny.so
account  required       pam_deny.so
password required       pam_deny.so
session  required       pam_deny.so
EOF

	cat > ${D}/etc/pam.d/system-account << "EOF"
# Begin /etc/pam.d/system-account

account   required    pam_unix.so

# End /etc/pam.d/system-account
EOF

	cat > ${D}/etc/pam.d/system-auth << "EOF"
# Begin /etc/pam.d/system-auth

auth      required    pam_unix.so

# End /etc/pam.d/system-auth
EOF

	cat > ${D}/etc/pam.d/system-session << "EOF"
# Begin /etc/pam.d/system-session

session   required    pam_unix.so

# End /etc/pam.d/system-session
EOF
	cat > ${D}/etc/pam.d/system-password << "EOF"
# Begin /etc/pam.d/system-password

# use sha512 hash for encryption, use shadow, and try to use any previously
# defined authentication token (chosen password) set by any prior module
password  required    pam_unix.so       sha512 shadow try_first_pass

# End /etc/pam.d/system-password
EOF

	cat > ${D}/etc/pam.d/other << "EOF"
# Begin /etc/pam.d/other

auth        required        pam_warn.so
auth        required        pam_deny.so
account     required        pam_warn.so
account     required        pam_deny.so
password    required        pam_warn.so
password    required        pam_deny.so
session     required        pam_warn.so
session     required        pam_deny.so

# End /etc/pam.d/other
EOF
}
