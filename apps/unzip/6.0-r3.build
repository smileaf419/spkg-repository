####
## unzip build
## Copyright 2023-2025 spkg developers, licensed under GPLv2
HOMEPAGE="https://infozip.sourceforge.net/UnZip.html"
DESCRIPTION="unzipper for pkzip-compressed files"
LICENSE="Info-ZIP"
SRC_URI=("https://downloads.sourceforge.net/infozip/unzip${PKG_VER/./}.tar.gz")
PATCHES=(
"http://deb.debian.org/debian/pool/main/u/unzip/unzip_6.0-29.debian.tar.xz"
"https://gitweb.gentoo.org/repo/gentoo.git/plain/app-arch/unzip/files/unzip-6.0-format-security.patch"
"https://gitweb.gentoo.org/repo/gentoo.git/plain/app-arch/unzip/files/unzip-6.0-no-exec-stack.patch"
"https://gitweb.gentoo.org/repo/gentoo.git/plain/app-arch/unzip/files/unzip-6.0-fix-false-overlap-detection-on-32bit-systems.patch"
#"https://raw.githubusercontent.com/nasbdh9/packages/7a72afeb4678f31c3b566cd520b94b9b60ccb3a8/utils/unzip/patches/012-fix-gcc15-build.patch"
)
DEPS="apps/bzip2"
BDEPS=""
RDEPS=""
ARCHS="x86 x86_64"
SLOT=0
B=unzip60
#unzip${PKG_VER/./}

src_patch() {
#	convmv -f cp936 -t utf-8 -r --nosmart --notest .
	spatches debian/patches
	patch_default
	rm debian/patches/02-this-is-debian-unzip.patch
	sed "/gmtime/s/^.*$/   struct tm *gmtime(const time_t *), *localtime(const time_t *);/" -i unix/unxcfg.h
}

## Required for building with GCC 15
src_prepare() {
        append-cflags -std=gnu17
}

src_configure() { :; }

src_compile() {
	# Needed for Clang 16
#	append-cppflags -std=gnu89
	# Linux Hosts
	append-cppflags -DNO_LCHMOD
	# Bzip2 support
	append-cppflags -DUSE_BZIP2
	# Unicode
	append-cppflags -DUNICODE_SUPPORT -DUNICODE_WCHAR -DUTF8_MAYBE_NATIVE -DUSE_ICONV_MAPPING
	# Large File support
	append-cppflags -DLARGE_FILE_SUPPORT
	export CPPFLAGS=${CXXFLAGS}

	sed -i -r \
		-e '/^CFLAGS/d' \
		-e '/CFLAGS/s:-O[0-9]?:$(CFLAGS) $(CPPFLAGS):' \
		-e '/^STRIP/s:=.*:=true:' \
		-e 's:LF2 = -s:LF2 = :' \
		-e "/^#L_BZ2/s:^.::" \
		-e 's:LF = :LF = $(LDFLAGS) :' \
		-e 's:SL = :SL = $(LDFLAGS) :' \
		-e 's:FL = :FL = $(LDFLAGS) :' \
		-e 's:$(AS) :$(AS) $(ASFLAGS) :g' \
	    unix/Makefile

	rm -r bzip2

	make -f unix/Makefile generic CPPFLAGS="$CPPFLAGS" CC="gcc -std=gnu89" 
}

src_test() { :; }

src_install() {
	make prefix=${D}/usr MANDIR=${D}/usr/share/man/man1 \
		-f unix/Makefile install
}
